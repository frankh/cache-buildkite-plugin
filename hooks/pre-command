#!/bin/bash
# shellcheck disable=SC2001
set -euo pipefail

if [[ "${BUILDKITE_PLUGIN_CACHE_DEBUG:-false}" =~ (true|on|1) ]] ; then
  set -x
fi

function mark_restored() {
  echo "Successfully restored $1"
  export BUILDKITE_PLUGIN_CACHE_RESTORED=${BUILDKITE_PLUGIN_CACHE_RESTORED:-}:$1:
}

if [[ -n "${BUILDKITE_PLUGIN_CACHE_CACHE_KEY:-}" ]] ; then

  cache_key_prefix=$(echo "$BUILDKITE_PLUGIN_CACHE_CACHE_KEY" | sed -e 's/{.*//')
  template_value=$(echo "$BUILDKITE_PLUGIN_CACHE_CACHE_KEY" | sed -e 's/^[^\{{]*[^A-Za-z]*//' -e 's/.}}.*$//' | tr -d \' | tr -d \")

  if [[ $template_value == *"checksum"* ]]; then
    checksum_argument=$(echo "$template_value" | sed -e 's/checksum*//')
    function=${template_value/"checksum"/"shasum"}
    result=$($function | tr -d "$checksum_argument")
    cache_key="$cache_key_prefix$result"
  else
    cache_key=$BUILDKITE_PLUGIN_CACHE_CACHE_KEY
  fi

  echo "Restoring cache ${cache_key}"

  bucket="${BUILDKITE_PLUGIN_CACHE_S3_BUCKET_NAME}/${BUILDKITE_ORGANIZATION_SLUG}/${BUILDKITE_PIPELINE_SLUG}/${cache_key}"
  tmpdir=$(mktemp -d)
  aws s3 sync "s3://${bucket}/" $tmpdir/.
  # Set env var if we loaded the cache so we can skip reuploading it
  tar -xzf $tmpdir/cache.tar.gz && mark_restored $cache_key || echo "Cache not found"
  rm -rf $tmpdir
fi
